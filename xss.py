#!/usr/bin/env python
# encoding: utf8

import sys
import time
import traceback
import socket
import Queue
import argparse
import threading
import hashlib
import uuid
import random
import string

import gc
import gevent
import pymysql
from gevent import monkey
monkey.patch_all()


import j_pentest_utils
import dsxs_api
import sxss

class XSSFactory( j_pentest_utils.BaseFactory ):

    def manager(self):
        to_scan_url_list = j_pentest_utils.textcsv_read( 'source.txt' )
        for to_scan_url in to_scan_url_list:
            job = {
                'url': to_scan_url,
                'timeout': 60*3,
            }
            self.job_queue.put( job )

    def do_job(self, job):
        def xss_scan( url ):
            try:
                random_key = ''.join( random.sample( string.ascii_lowercase, 8 ) )
                random_value = ''.join( random.sample( string.ascii_lowercase, 8 ) )
                url = '{}&{}={}'.format( url, random_key, random_value )
                #if dsxs_api.dsxs_scan_page( url ):
                #    self.success_queue.put( url )
                r = sxss.scan_page( url )
                if r:
                    self.success_queue.put( r )
            except Exception as e:
                print e.args
                sys.exc_clear()
        url = job['url']
        xss_scan( url )


def main():
    # Parse command line options
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--thread", type=int, default=256, help="threads to use")
    args = parser.parse_args()

    xssfactory = XSSFactory( args )

    while True:
        time.sleep( 3 )
        print 'job_queue size:', xssfactory.job_queue.qsize()

if __name__ == '__main__':
    main()
